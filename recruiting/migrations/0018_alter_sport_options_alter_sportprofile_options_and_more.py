# Generated by Django 5.2.5 on 2025-10-16 14:51

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('recruiting', '0017_admin_capabilities'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='sport',
            options={'ordering': ['name']},
        ),
        migrations.AlterModelOptions(
            name='sportprofile',
            options={'ordering': ['-is_primary_sport', 'sport__name']},
        ),
        migrations.AddField(
            model_name='sport',
            name='code',
            field=models.CharField(default='UNKNOWN', max_length=20, unique=True),
        ),
        migrations.AddField(
            model_name='sport',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, null=True),
        ),
        migrations.AddField(
            model_name='sport',
            name='description',
            field=models.TextField(blank=True, default=''),
        ),
        migrations.AddField(
            model_name='sport',
            name='has_events',
            field=models.BooleanField(default=False, help_text='Track & Field, Swimming have events not positions'),
        ),
        migrations.AddField(
            model_name='sport',
            name='has_positions',
            field=models.BooleanField(default=True, help_text='Does this sport have defined positions?'),
        ),
        migrations.AddField(
            model_name='sport',
            name='has_weight_classes',
            field=models.BooleanField(default=False, help_text='Wrestling has weight classes'),
        ),
        migrations.AddField(
            model_name='sport',
            name='is_active',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='sport',
            name='updated_at',
            field=models.DateTimeField(auto_now=True, null=True),
        ),
        migrations.AddField(
            model_name='sportprofile',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, null=True),
        ),
        migrations.AddField(
            model_name='sportprofile',
            name='current_team',
            field=models.CharField(blank=True, default='', help_text='Current team name', max_length=200),
        ),
        migrations.AddField(
            model_name='sportprofile',
            name='is_active',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='sportprofile',
            name='is_primary_sport',
            field=models.BooleanField(default=False, help_text="Is this the athlete's primary sport?"),
        ),
        migrations.AddField(
            model_name='sportprofile',
            name='jersey_number',
            field=models.CharField(blank=True, max_length=10),
        ),
        migrations.AddField(
            model_name='sportprofile',
            name='team_level',
            field=models.CharField(blank=True, help_text="e.g., 'Varsity', 'JV', 'Club'", max_length=100),
        ),
        migrations.AddField(
            model_name='sportprofile',
            name='updated_at',
            field=models.DateTimeField(auto_now=True, null=True),
        ),
        migrations.AddField(
            model_name='sportprofile',
            name='user_profile',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sport_profiles_new', to='recruiting.userprofile'),
        ),
        migrations.AddField(
            model_name='sportprofile',
            name='years_experience',
            field=models.IntegerField(default=0, help_text='How many years has the athlete played this sport?'),
        ),
        migrations.CreateModel(
            name='CompetitionResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('result_type', models.CharField(choices=[('CHAMPIONSHIP', 'Championship'), ('TOURNAMENT', 'Tournament Placement'), ('AWARD', 'Individual Award'), ('HONOR', 'Team/Individual Honor'), ('RANKING', 'Ranking Achievement'), ('RECORD', 'Record Set')], max_length=20)),
                ('competition_name', models.CharField(max_length=200)),
                ('competition_level', models.CharField(help_text='State, Regional, National, International', max_length=100)),
                ('date', models.DateField()),
                ('placement', models.CharField(blank=True, help_text="'1st Place', 'Finalist', 'All-Conference'", max_length=100)),
                ('description', models.TextField()),
                ('significance', models.TextField(blank=True, help_text='Why this matters for recruiting')),
                ('certificate_url', models.URLField(blank=True)),
                ('article_url', models.URLField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('sport_profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='competition_results', to='recruiting.sportprofile')),
            ],
            options={
                'ordering': ['-date', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Position',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('code', models.CharField(max_length=20)),
                ('abbreviation', models.CharField(max_length=10)),
                ('description', models.TextField(blank=True)),
                ('category', models.CharField(blank=True, max_length=50)),
                ('display_order', models.IntegerField(default=0, help_text='Order for displaying positions')),
                ('sport', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='positions', to='recruiting.sport')),
            ],
            options={
                'ordering': ['sport', 'display_order', 'name'],
                'unique_together': {('sport', 'code')},
            },
        ),
        migrations.CreateModel(
            name='PositionProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_primary', models.BooleanField(default=False, help_text='Is this their primary position in this sport?')),
                ('proficiency_level', models.IntegerField(choices=[(1, 'Learning'), (2, 'Developing'), (3, 'Proficient'), (4, 'Advanced'), (5, 'Elite')], default=3)),
                ('metrics', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('position', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recruiting.position')),
                ('sport_profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='position_profiles', to='recruiting.sportprofile')),
            ],
            options={
                'ordering': ['-is_primary', 'position__display_order'],
                'unique_together': {('sport_profile', 'position')},
            },
        ),
        migrations.CreateModel(
            name='PerformanceEntry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('season', models.CharField(help_text="e.g., '2024 Fall', '2024-2025'", max_length=100)),
                ('event_name', models.CharField(blank=True, help_text='Game, meet, match name', max_length=200)),
                ('opponent', models.CharField(blank=True, max_length=200)),
                ('location', models.CharField(blank=True, max_length=200)),
                ('metrics', models.JSONField(default=dict)),
                ('notes', models.TextField(blank=True)),
                ('video_url', models.URLField(blank=True)),
                ('is_verified', models.BooleanField(default=False, help_text='Has a coach or official verified this?')),
                ('verified_by', models.CharField(blank=True, help_text='Coach name, official timing service, etc.', max_length=200)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('sport_profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='performances', to='recruiting.sportprofile')),
                ('position_profile', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='performances', to='recruiting.positionprofile')),
            ],
            options={
                'verbose_name_plural': 'Performance Entries',
                'ordering': ['-date', '-created_at'],
            },
        ),
        migrations.RemoveField(
            model_name='sportprofile',
            name='metrics',
        ),
        migrations.RemoveField(
            model_name='sportprofile',
            name='position',
        ),
        migrations.RemoveField(
            model_name='sportprofile',
            name='user',
        ),
        migrations.CreateModel(
            name='MetricDefinition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('code', models.CharField(max_length=50)),
                ('metric_type', models.CharField(choices=[('PHYSICAL', 'Physical Measurement'), ('PERFORMANCE', 'Performance Statistic'), ('TIME', 'Time-based'), ('DISTANCE', 'Distance-based'), ('PERCENTAGE', 'Percentage'), ('COUNT', 'Count/Number'), ('SCORE', 'Score'), ('RATING', 'Rating/Ranking')], max_length=20)),
                ('unit', models.CharField(choices=[('SECONDS', 'Seconds'), ('MINUTES', 'Minutes'), ('INCHES', 'Inches'), ('FEET', 'Feet'), ('POUNDS', 'Pounds'), ('METERS', 'Meters'), ('YARDS', 'Yards'), ('PERCENT', 'Percentage'), ('COUNT', 'Count'), ('POINTS', 'Points'), ('NONE', 'No Unit')], max_length=20)),
                ('description', models.TextField(blank=True)),
                ('is_required', models.BooleanField(default=False)),
                ('is_common', models.BooleanField(default=False, help_text='Applies to all positions in this sport')),
                ('min_value', models.DecimalField(blank=True, decimal_places=3, max_digits=10, null=True)),
                ('max_value', models.DecimalField(blank=True, decimal_places=3, max_digits=10, null=True)),
                ('display_order', models.IntegerField(default=0)),
                ('sport', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='metrics', to='recruiting.sport')),
                ('position', models.ForeignKey(blank=True, help_text='If null, this metric applies to all positions', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='metrics', to='recruiting.position')),
            ],
            options={
                'ordering': ['sport', 'display_order', 'name'],
                'unique_together': {('sport', 'position', 'code')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='sportprofile',
            unique_together={('user_profile', 'sport')},
        ),
    ]
